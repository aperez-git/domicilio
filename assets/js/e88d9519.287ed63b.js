"use strict";(self.webpackChunkdomicilio=self.webpackChunkdomicilio||[]).push([[6122],{3905:(e,a,r)=>{r.d(a,{Zo:()=>u,kt:()=>g});var o=r(7294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function t(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?t(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,o,n=function(e,a){if(null==e)return{};var r,o,n={},t=Object.keys(e);for(o=0;o<t.length;o++)r=t[o],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(o=0;o<t.length;o++)r=t[o],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),l=function(e){var a=o.useContext(c),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},u=function(e){var a=l(e.components);return o.createElement(c.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},p=o.forwardRef((function(e,a){var r=e.components,n=e.mdxType,t=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),p=n,g=d["".concat(c,".").concat(p)]||d[p]||m[p]||t;return r?o.createElement(g,i(i({ref:a},u),{},{components:r})):o.createElement(g,i({ref:a},u))}));function g(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var t=r.length,i=new Array(t);i[0]=p;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<t;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}p.displayName="MDXCreateElement"},1563:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>t,metadata:()=>s,toc:()=>l});var o=r(7462),n=(r(7294),r(3905));const t={},i=void 0,s={unversionedId:"Tecnolog\xedas/Programaci\xf3n Reactiva",id:"Tecnolog\xedas/Programaci\xf3n Reactiva",title:"Programaci\xf3n Reactiva",description:"Programaci\xf3n Reactiva",source:"@site/docs/Tecnolog\xedas/Programaci\xf3n Reactiva.md",sourceDirName:"Tecnolog\xedas",slug:"/Tecnolog\xedas/Programaci\xf3n Reactiva",permalink:"/domicilio/docs/Tecnolog\xedas/Programaci\xf3n Reactiva",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Tecnolog\xedas/Programaci\xf3n Reactiva.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mutiny",permalink:"/domicilio/docs/Tecnolog\xedas/Mutiny"},next:{title:"Quarkus",permalink:"/domicilio/docs/Tecnolog\xedas/Quarkus"}},c={},l=[{value:"Programaci\xf3n Reactiva",id:"programaci\xf3n-reactiva",level:3}],u={toc:l},d="wrapper";function m(e){let{components:a,...r}=e;return(0,n.kt)(d,(0,o.Z)({},u,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"programaci\xf3n-reactiva"},"Programaci\xf3n Reactiva"),(0,n.kt)("p",null,"La ",(0,n.kt)("a",{parentName:"p",href:"https://www.techtarget.com/searchapparchitecture/definition/reactive-programming#:~:text=Reactive%20programming%20describes%20a%20design,a%20user%20makes%20an%20inquiry."},"programaci\xf3n reactiva")," describe un paradigma de dise\xf1o que se basa en la l\xf3gica de programaci\xf3n as\xedncrona para gestionar actualizaciones en tiempo real de contenidos que, de otro modo, ser\xedan est\xe1ticos. Proporciona un medio eficaz -el uso de flujos de datos automatizados- para gestionar las actualizaciones de datos de los contenidos cada vez que un usuario realiza una consulta."),(0,n.kt)("p",null,"Los flujos de datos utilizados en la programaci\xf3n reactiva son colecciones coherentes y cohesionadas de se\xf1ales digitales creadas de forma continua o casi continua. Estos flujos de datos se env\xedan desde una fuente -como un sensor de movimiento, un medidor de temperatura o una base de datos de inventario de productos- como reacci\xf3n a un desencadenante. Ese desencadenante puede ser cualquiera de los siguientes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Un evento, como alertas generadas por software, pulsaciones de teclas o se\xf1ales de un sistema de Internet de las cosas (IoT)."),(0,n.kt)("li",{parentName:"ul"},"Una llamada, que es una funci\xf3n que invoca una rutina como parte de un flujo de trabajo."),(0,n.kt)("li",{parentName:"ul"},"Un mensaje, que es una unidad de informaci\xf3n que el sistema devuelve al usuario o al operador del sistema con informaci\xf3n sobre el estado de una operaci\xf3n, un error, un fallo u otra condici\xf3n.")),(0,n.kt)("p",null,'La programaci\xf3n reactiva crea software que responde a eventos en lugar de solicitar entradas a los usuarios.  Un evento es simplemente una se\xf1al de que algo ha sucedido. Generalmente se acepta que los eventos son se\xf1ales "en tiempo real", lo que significa que se generan al mismo tiempo que la condici\xf3n que se\xf1alan, y deben procesarse tambi\xe9n en tiempo real. La mejor forma de visualizar estos eventos es como "flujos" que pueden pasar por varios elementos de procesamiento, detenerse y gestionarse por el camino, o bifurcarse y generar una actividad de procesamiento paralela. En la mayor\xeda de los casos, este procesamiento es sensible al tiempo, lo que significa que las aplicaciones requieren un estilo de programaci\xf3n diferente, que es como surgi\xf3 la programaci\xf3n reactiva.'),(0,n.kt)("p",null,'La programaci\xf3n reactiva y los sistemas reactivos de los que se ocupa consisten en una combinaci\xf3n de funciones de "observador" y "controlador". El primero reconoce condiciones o cambios importantes y genera mensajes para se\xf1alar que han sucedido, y el segundo trata esos mensajes adecuadamente. La programaci\xf3n reactiva parte de la premisa de que no hay control sobre el n\xfamero o el momento de los eventos, por lo que el software debe ser resistente y altamente escalable para gestionar cargas variables.'))}m.isMDXComponent=!0}}]);